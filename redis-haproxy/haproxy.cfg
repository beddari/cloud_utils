## Check 3 sentinels to see if they think redisA is master
backend check_master_redis1
mode tcp
option tcp-check
tcp-check send PINGrn
tcp-check expect string +PONG
tcp-check send SENTINEL master redis-cluster
tcp-check expect string 10.42.146.201
tcp-check send QUITrn
tcp-check expect string +OK

server sentinelA 10.42.146.201:16379 check inter 2s
server sentinelB 10.42.66.162:16379 check inter 2s
server sentinelC 10.42.66.194:16379 check inter 2s

## Check 3 sentinels to see if they think redisB is master
backend check_master_redis2
mode tcp
option tcp-check
tcp-check send PINGrn
tcp-check expect string +PONG
tcp-check send SENTINEL master redis-cluster
tcp-check expect string 10.42.66.162
tcp-check send QUITrn
tcp-check expect string +OK

server sentinelA 10.42.146.201:16379 check inter 2s
server sentinelB 10.42.66.162:16379 check inter 2s
server sentinelC 10.42.66.194:16379 check inter 2s

## Check 3 sentinels to see if they think redisB is master
backend check_master_redis3
mode tcp
option tcp-check
tcp-check send PINGrn
tcp-check expect string +PONG
tcp-check send SENTINEL master redis-cluster
tcp-check expect string 10.42.66.194
tcp-check send QUITrn
tcp-check expect string +OK

server sentinelA 10.42.146.201:16379 check inter 2s
server sentinelB 10.42.66.162:16379 check inter 2s
server sentinelC 10.42.66.194:16379 check inter 2s

# decide redis backend to use
frontend ft_redis
bind *:6380
mode tcp
acl network_allowed src 10.0.0.0/8
tcp-request connection reject if !network_allowed
timeout connect 4s
timeout server 15s
timeout client 15s
use_backend bk_redis

# Check all redis servers to see if they think they are master
backend bk_redis
mode tcp
option tcp-check
tcp-check connect
tcp-check send PING\r\n
tcp-check expect string +PONG
tcp-check send info\ replication\r\n
tcp-check expect string role:master
tcp-check send QUIT\r\n
tcp-check expect string +OK

use-server redis1 if { srv_is_up(redis1) } { nbsrv(check_master_redis1) ge 2 }
use-server redis2 if { srv_is_up(redis2) } { nbsrv(check_master_redis2) ge 2 }
use-server redis3 if { srv_is_up(redis3) } { nbsrv(check_master_redis3) ge 2 }
server redis1 10.42.146.201:6379 check inter 2s
server redis2 10.42.66.162:6379 check inter 2s
server redis3 10.42.66.194:6379 check inter 2s
